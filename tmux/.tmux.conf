# ==========================
# ===  General settings  ===
# ==========================
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ",*-256color:Tc"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on


# ==========================
# ===   Key bindings     ===
# ==========================

# split panes using | and -
# INCOMPATIBLE: tmux's configuration parsing has changed to use yacc(1). There
# is one incompatible change: a \ on its own must be escaped or quoted as
# either \\ or '\' (the latter works on older tmux versions).
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Reload tmux configuration 
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# clear history
bind C-k clear-history

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# switch windows using Shift-arrow
bind -n S-Left previous-window
bind -n S-Right next-window

# switch windows using Ctrl-PgUp/PgDown like in firefox
bind -n C-Pageup previous-window
bind -n C-Pagedown next-window

# don't rename windows automatically
set-option -g allow-rename off
set-window-option -g xterm-keys on

# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
set -g @copy_use_osc52_fallback on

# Prefer vi style key table
setw -g mode-keys vi

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

set -g mouse on

# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
# unbind -T copy-mode-vi MouseDragEnd1Pane
# bind -T copy-mode-vi MouseDown1Pane select-pane \;\
#   send-keys -X copy-pipe "pbcopy" \;\
#   send-keys -X clear-selection

# bind p paste-buffer
# bind C-p choose-buffer

# =====================================
# ===    Appearence and status bar  ===
# ======================================

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Session is considered to be remote when we ssh into host
# if-shell 'test -n "$SSH_CLIENT"' \
#     'source-file ~/dotfiles/tmux/.tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    set status off \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set status on \;\
  refresh-client -S


#============================
# ===       Plugins        ===
#============================
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-open'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'

set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'erikw/tmux-powerline'
# if-shell 'test -n "$SSH_CLIENT"' 'source-file ~/dotfiles/tmux/.tmux.remote.conf'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if-shell "uname | grep -q Darwin" "run '/opt/homebrew/opt/tpm/share/tpm/tpm'"
if-shell "uname | grep -q Linux" "run '~/.tmux/plugins/tpm/tpm'"
